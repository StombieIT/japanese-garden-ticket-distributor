/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PassageImport } from './routes/passage'
import { Route as AccountImport } from './routes/account'
import { Route as AuthSignInImport } from './routes/_auth/sign-in'
import { Route as AuthRegisterImport } from './routes/_auth/register'

// Create Virtual Routes

const UsersLazyImport = createFileRoute('/users')()
const TimesLazyImport = createFileRoute('/times')()
const StatusesLazyImport = createFileRoute('/statuses')()
const PassagesLazyImport = createFileRoute('/passages')()
const AuthLazyImport = createFileRoute('/_auth')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const UsersLazyRoute = UsersLazyImport.update({
  path: '/users',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/users.lazy').then((d) => d.Route))

const TimesLazyRoute = TimesLazyImport.update({
  path: '/times',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/times.lazy').then((d) => d.Route))

const StatusesLazyRoute = StatusesLazyImport.update({
  path: '/statuses',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/statuses.lazy').then((d) => d.Route))

const PassagesLazyRoute = PassagesLazyImport.update({
  path: '/passages',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/passages.lazy').then((d) => d.Route))

const AuthLazyRoute = AuthLazyImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_auth.lazy').then((d) => d.Route))

const PassageRoute = PassageImport.update({
  path: '/passage',
  getParentRoute: () => rootRoute,
} as any)

const AccountRoute = AccountImport.update({
  path: '/account',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AuthSignInRoute = AuthSignInImport.update({
  path: '/sign-in',
  getParentRoute: () => AuthLazyRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  path: '/register',
  getParentRoute: () => AuthLazyRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/account': {
      preLoaderRoute: typeof AccountImport
      parentRoute: typeof rootRoute
    }
    '/passage': {
      preLoaderRoute: typeof PassageImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      preLoaderRoute: typeof AuthLazyImport
      parentRoute: typeof rootRoute
    }
    '/passages': {
      preLoaderRoute: typeof PassagesLazyImport
      parentRoute: typeof rootRoute
    }
    '/statuses': {
      preLoaderRoute: typeof StatusesLazyImport
      parentRoute: typeof rootRoute
    }
    '/times': {
      preLoaderRoute: typeof TimesLazyImport
      parentRoute: typeof rootRoute
    }
    '/users': {
      preLoaderRoute: typeof UsersLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/register': {
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/sign-in': {
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof AuthLazyImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  AccountRoute,
  PassageRoute,
  AuthLazyRoute.addChildren([AuthRegisterRoute, AuthSignInRoute]),
  PassagesLazyRoute,
  StatusesLazyRoute,
  TimesLazyRoute,
  UsersLazyRoute,
])

/* prettier-ignore-end */
